/* tslint:disable */
/* eslint-disable */
/**
 * Oasisscan API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ValidatorRow
 */
export interface ValidatorRow {
    /**
     * If "true", entity is part of validator set (top 110).
     * @type {boolean}
     * @memberof ValidatorRow
     */
    active: boolean;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    balance: string;
    /**
     * 
     * @type {number}
     * @memberof ValidatorRow
     */
    commission: number;
    /**
     * 
     * @type {number}
     * @memberof ValidatorRow
     */
    delegators: number;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    entity_address: string;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    entity_id: string;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    escrow: string;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    escrow_change24: string;
    /**
     * 
     * @type {number}
     * @memberof ValidatorRow
     */
    escrow_percent: number;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    icon: string;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    keybase: string;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    node_address: string;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    node_id: string;
    /**
     * 
     * @type {number}
     * @memberof ValidatorRow
     */
    nonce: number;
    /**
     * 
     * @type {number}
     * @memberof ValidatorRow
     */
    proposals: number;
    /**
     * 
     * @type {number}
     * @memberof ValidatorRow
     */
    rank: number;
    /**
     * 
     * @type {number}
     * @memberof ValidatorRow
     */
    score: number;
    /**
     * 
     * @type {number}
     * @memberof ValidatorRow
     */
    signs: number;
    /**
     * If "true", an entity has a node that is registered for being a validator, node is up to date, and has successfully registered itself. However, it may or may not be part of validator set (top 110).
     * @type {boolean}
     * @memberof ValidatorRow
     */
    status: boolean;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    total_shares: string;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    twitter: string;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    uptime: string;
    /**
     * 
     * @type {string}
     * @memberof ValidatorRow
     */
    website: string;
}

export function ValidatorRowFromJSON(json: any): ValidatorRow {
    return ValidatorRowFromJSONTyped(json, false);
}

export function ValidatorRowFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidatorRow {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'active': json['active'],
        'balance': json['balance'],
        'commission': json['commission'],
        'delegators': json['delegators'],
        'email': json['email'],
        'entity_address': json['entityAddress'],
        'entity_id': json['entityId'],
        'escrow': json['escrow'],
        'escrow_change24': json['escrowChange24'],
        'escrow_percent': json['escrowPercent'],
        'icon': json['icon'],
        'keybase': json['keybase'],
        'name': json['name'],
        'node_address': json['nodeAddress'],
        'node_id': json['nodeId'],
        'nonce': json['nonce'],
        'proposals': json['proposals'],
        'rank': json['rank'],
        'score': json['score'],
        'signs': json['signs'],
        'status': json['status'],
        'total_shares': json['totalShares'],
        'twitter': json['twitter'],
        'uptime': json['uptime'],
        'website': json['website'],
    };
}

export function ValidatorRowToJSON(value?: ValidatorRow | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'active': value.active,
        'balance': value.balance,
        'commission': value.commission,
        'delegators': value.delegators,
        'email': value.email,
        'entityAddress': value.entity_address,
        'entityId': value.entity_id,
        'escrow': value.escrow,
        'escrowChange24': value.escrow_change24,
        'escrowPercent': value.escrow_percent,
        'icon': value.icon,
        'keybase': value.keybase,
        'name': value.name,
        'nodeAddress': value.node_address,
        'nodeId': value.node_id,
        'nonce': value.nonce,
        'proposals': value.proposals,
        'rank': value.rank,
        'score': value.score,
        'signs': value.signs,
        'status': value.status,
        'totalShares': value.total_shares,
        'twitter': value.twitter,
        'uptime': value.uptime,
        'website': value.website,
    };
}


