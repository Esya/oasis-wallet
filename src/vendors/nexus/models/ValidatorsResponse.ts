/* tslint:disable */
/* eslint-disable */
/**
 * Oasis Nexus API V1
 * An API for accessing indexed data from the Oasis Network.  <!-- Acts as a separator after search in sidebar --> # Endpoints 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ValidatorList } from './ValidatorList';
import {
    ValidatorListFromJSON,
    ValidatorListFromJSONTyped,
    ValidatorListToJSON,
    ValidatorListToJSONTyped,
} from './ValidatorList';
import type { ValidatorAggStats } from './ValidatorAggStats';
import {
    ValidatorAggStatsFromJSON,
    ValidatorAggStatsFromJSONTyped,
    ValidatorAggStatsToJSON,
    ValidatorAggStatsToJSONTyped,
} from './ValidatorAggStats';

/**
 * 
 * @export
 * @interface ValidatorsResponse
 */
export interface ValidatorsResponse {
    /**
     * 
     * @type {ValidatorList}
     * @memberof ValidatorsResponse
     */
    validator_list: ValidatorList;
    /**
     * Summary statistics across all consensus validators.
     * @type {ValidatorAggStats}
     * @memberof ValidatorsResponse
     */
    stats: ValidatorAggStats;
}

/**
 * Check if a given object implements the ValidatorsResponse interface.
 */
export function instanceOfValidatorsResponse(value: object): value is ValidatorsResponse {
    if (!('validator_list' in value) || value['validator_list'] === undefined) return false;
    if (!('stats' in value) || value['stats'] === undefined) return false;
    return true;
}

export function ValidatorsResponseFromJSON(json: any): ValidatorsResponse {
    return ValidatorsResponseFromJSONTyped(json, false);
}

export function ValidatorsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidatorsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'validator_list': ValidatorListFromJSON(json['validator_list']),
        'stats': ValidatorAggStatsFromJSON(json['stats']),
    };
}

export function ValidatorsResponseToJSON(json: any): ValidatorsResponse {
    return ValidatorsResponseToJSONTyped(json, false);
}

export function ValidatorsResponseToJSONTyped(value?: ValidatorsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'validator_list': ValidatorListToJSON(value['validator_list']),
        'stats': ValidatorAggStatsToJSON(value['stats']),
    };
}

