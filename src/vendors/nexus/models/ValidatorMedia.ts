/* tslint:disable */
/* eslint-disable */
/**
 * Oasis Nexus API V1
 * An API for accessing indexed data from the Oasis Network.  <!-- Acts as a separator after search in sidebar --> # Endpoints 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ValidatorMedia
 */
export interface ValidatorMedia {
    /**
     * An URL associated with the entity.
     * @type {string}
     * @memberof ValidatorMedia
     */
    url?: string;
    /**
     * An email address associated with the entity.
     * @type {string}
     * @memberof ValidatorMedia
     */
    email?: string;
    /**
     * Twitter handle.
     * @type {string}
     * @memberof ValidatorMedia
     */
    twitter?: string;
    /**
     * Keybase handle.
     * @type {string}
     * @memberof ValidatorMedia
     */
    keybase?: string;
    /**
     * The human-readable name of this entity.
     * @type {string}
     * @memberof ValidatorMedia
     */
    name?: string;
    /**
     * URL to a logo image for the entity.
     * @type {string}
     * @memberof ValidatorMedia
     */
    logoUrl?: string;
}

/**
 * Check if a given object implements the ValidatorMedia interface.
 */
export function instanceOfValidatorMedia(value: object): value is ValidatorMedia {
    return true;
}

export function ValidatorMediaFromJSON(json: any): ValidatorMedia {
    return ValidatorMediaFromJSONTyped(json, false);
}

export function ValidatorMediaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidatorMedia {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['url'] == null ? undefined : json['url'],
        'email': json['email'] == null ? undefined : json['email'],
        'twitter': json['twitter'] == null ? undefined : json['twitter'],
        'keybase': json['keybase'] == null ? undefined : json['keybase'],
        'name': json['name'] == null ? undefined : json['name'],
        'logoUrl': json['logoUrl'] == null ? undefined : json['logoUrl'],
    };
}

export function ValidatorMediaToJSON(json: any): ValidatorMedia {
    return ValidatorMediaToJSONTyped(json, false);
}

export function ValidatorMediaToJSONTyped(value?: ValidatorMedia | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'url': value['url'],
        'email': value['email'],
        'twitter': value['twitter'],
        'keybase': value['keybase'],
        'name': value['name'],
        'logoUrl': value['logoUrl'],
    };
}

