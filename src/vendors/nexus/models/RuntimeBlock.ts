/* tslint:disable */
/* eslint-disable */
/**
 * Oasis Nexus API V1
 * An API for accessing indexed data from the Oasis Network.  <!-- Acts as a separator after search in sidebar --> # Endpoints 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A ParaTime block.
 * 
 * @export
 * @interface RuntimeBlock
 */
export interface RuntimeBlock {
    /**
     * The block round.
     * @type {number}
     * @memberof RuntimeBlock
     */
    round: number;
    /**
     * The block header hash.
     * @type {string}
     * @memberof RuntimeBlock
     */
    hash: string;
    /**
     * The second-granular consensus time.
     * @type {string}
     * @memberof RuntimeBlock
     */
    timestamp: string;
    /**
     * The number of transactions in the block.
     * @type {number}
     * @memberof RuntimeBlock
     */
    num_transactions: number;
    /**
     * The total byte size of all transactions in the block.
     * @type {number}
     * @memberof RuntimeBlock
     */
    size: number;
    /**
     * The total gas used by all transactions in the block.
     * @type {number}
     * @memberof RuntimeBlock
     */
    gas_used: number;
}

/**
 * Check if a given object implements the RuntimeBlock interface.
 */
export function instanceOfRuntimeBlock(value: object): value is RuntimeBlock {
    if (!('round' in value) || value['round'] === undefined) return false;
    if (!('hash' in value) || value['hash'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    if (!('num_transactions' in value) || value['num_transactions'] === undefined) return false;
    if (!('size' in value) || value['size'] === undefined) return false;
    if (!('gas_used' in value) || value['gas_used'] === undefined) return false;
    return true;
}

export function RuntimeBlockFromJSON(json: any): RuntimeBlock {
    return RuntimeBlockFromJSONTyped(json, false);
}

export function RuntimeBlockFromJSONTyped(json: any, ignoreDiscriminator: boolean): RuntimeBlock {
    if (json == null) {
        return json;
    }
    return {
        
        'round': json['round'],
        'hash': json['hash'],
        'timestamp': json['timestamp'],
        'num_transactions': json['num_transactions'],
        'size': json['size'],
        'gas_used': json['gas_used'],
    };
}

export function RuntimeBlockToJSON(json: any): RuntimeBlock {
    return RuntimeBlockToJSONTyped(json, false);
}

export function RuntimeBlockToJSONTyped(value?: RuntimeBlock | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'round': value['round'],
        'hash': value['hash'],
        'timestamp': value['timestamp'],
        'num_transactions': value['num_transactions'],
        'size': value['size'],
        'gas_used': value['gas_used'],
    };
}

