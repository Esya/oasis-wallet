/* tslint:disable */
/* eslint-disable */
/**
 * Oasis Nexus API V1
 * An API for accessing indexed data from the Oasis Network.  <!-- Acts as a separator after search in sidebar --> # Endpoints 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EvmToken } from './EvmToken';
import {
    EvmTokenFromJSON,
    EvmTokenFromJSONTyped,
    EvmTokenToJSON,
    EvmTokenToJSONTyped,
} from './EvmToken';

/**
 * 
 * @export
 * @interface EvmNft
 */
export interface EvmNft {
    /**
     * 
     * @type {EvmToken}
     * @memberof EvmNft
     */
    token: EvmToken;
    /**
     * The instance ID of this NFT within the collection represented by `token`.
     * @type {string}
     * @memberof EvmNft
     */
    id: string;
    /**
     * The Oasis address of this NFT instance's owner.
     * @type {string}
     * @memberof EvmNft
     */
    owner?: string;
    /**
     * The Ethereum address of this NFT instance's owner.
     * @type {string}
     * @memberof EvmNft
     */
    owner_eth?: string;
    /**
     * The total number of transfers of this NFT instance.
     * 
     * @type {number}
     * @memberof EvmNft
     */
    num_transfers?: number;
    /**
     * 
     * @type {string}
     * @memberof EvmNft
     */
    metadata_uri?: string;
    /**
     * 
     * @type {string}
     * @memberof EvmNft
     */
    metadata_accessed?: string;
    /**
     * A metadata document for this NFT instance.
     * Currently only ERC-721 is supported, where the document is an Asset Metadata from the ERC721 Metadata JSON Schema.
     * 
     * @type {any}
     * @memberof EvmNft
     */
    metadata?: any | null;
    /**
     * Identifies the asset which this NFT represents
     * @type {string}
     * @memberof EvmNft
     */
    name?: string;
    /**
     * Describes the asset which this NFT represents
     * @type {string}
     * @memberof EvmNft
     */
    description?: string;
    /**
     * A URI pointing to a resource with mime type image/* representing
     * the asset which this NFT represents. (Additional
     * non-descriptive text from ERC-721 omitted.)
     * 
     * @type {string}
     * @memberof EvmNft
     */
    image?: string;
}

/**
 * Check if a given object implements the EvmNft interface.
 */
export function instanceOfEvmNft(value: object): value is EvmNft {
    if (!('token' in value) || value['token'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function EvmNftFromJSON(json: any): EvmNft {
    return EvmNftFromJSONTyped(json, false);
}

export function EvmNftFromJSONTyped(json: any, ignoreDiscriminator: boolean): EvmNft {
    if (json == null) {
        return json;
    }
    return {
        
        'token': EvmTokenFromJSON(json['token']),
        'id': json['id'],
        'owner': json['owner'] == null ? undefined : json['owner'],
        'owner_eth': json['owner_eth'] == null ? undefined : json['owner_eth'],
        'num_transfers': json['num_transfers'] == null ? undefined : json['num_transfers'],
        'metadata_uri': json['metadata_uri'] == null ? undefined : json['metadata_uri'],
        'metadata_accessed': json['metadata_accessed'] == null ? undefined : json['metadata_accessed'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'image': json['image'] == null ? undefined : json['image'],
    };
}

export function EvmNftToJSON(json: any): EvmNft {
    return EvmNftToJSONTyped(json, false);
}

export function EvmNftToJSONTyped(value?: EvmNft | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'token': EvmTokenToJSON(value['token']),
        'id': value['id'],
        'owner': value['owner'],
        'owner_eth': value['owner_eth'],
        'num_transfers': value['num_transfers'],
        'metadata_uri': value['metadata_uri'],
        'metadata_accessed': value['metadata_accessed'],
        'metadata': value['metadata'],
        'name': value['name'],
        'description': value['description'],
        'image': value['image'],
    };
}

